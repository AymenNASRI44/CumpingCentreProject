pipeline {
    agent any

    environment {
        COMPOSE_CMD = 'docker compose' // ou 'docker-compose' selon ta version
    }

    stages {

        stage('D√©marrage des conteneurs') {
            steps {
                script {
                    echo "üöÄ Lancement des conteneurs en mode d√©tach√©..."
                    sh "${COMPOSE_CMD} up -d"
                }
            }
        }

        stage('Tests Symfony') {
            steps {
                script {
                    echo "üß™ Ex√©cution des tests Symfony..."
                    sh "${COMPOSE_CMD} exec -T app php bin/console doctrine:migrations:migrate --no-interaction"
                    sh "${COMPOSE_CMD} exec -T app php bin/phpunit"
                }
            }
        }

        stage('D√©ploiement') {
            steps {
                script {
                    echo "üîÅ Red√©marrage des conteneurs avec reconstruction..."
                    sh "${COMPOSE_CMD} down"
                    sh "${COMPOSE_CMD} up -d --build"
                }
            }
        }
    }

    post {
        failure {
            echo "‚ùå Le d√©ploiement a √©chou√©. Consultez les logs pour plus d'informations."
        }
        success {
            echo "‚úÖ D√©ploiement termin√© avec succ√®s !"
        }
    }
}
